// Copyright 2024 ETH Zurich and University of Bologna.
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0
//
// Moritz Scherer <scheremo@iis.ee.ethz.ch>
diff --git a/Cargo.toml b/Cargo.toml
index d406357..7bd0f91 100644
--- a/Cargo.toml
+++ b/Cargo.toml
@@ -21,7 +21,7 @@ csv = "1.0.0-beta.2"
 elf = "0.0.10"
 flexfloat = { path = "flexfloat" }
 itertools = "0.9"
-llvm-sys = "120"
+llvm-sys = "150"
 log = { version = "0.4", features = ["release_max_level_info"] }
 pest = "2.1.3"
 pest_derive = "2.1.0"
diff --git a/build/runtime.rs b/build/runtime.rs
index 04f80b8..c03f248 100644
--- a/build/runtime.rs
+++ b/build/runtime.rs
@@ -22,8 +22,7 @@ pub fn build() {
             "--crate-type=staticlib",
             "-Copt-level=3",
             "-Cdebuginfo=0",
-            "-Cpanic=abort",
-            "-Cllvm-args=-opaque-pointers=0",
+            "-Cpanic=abort"
         ])
         .status()
         .unwrap();
diff --git a/src/engine.rs b/src/engine.rs
index 216996b..e5abe38 100644
--- a/src/engine.rs
+++ b/src/engine.rs
@@ -281,7 +281,6 @@ impl Engine {

             LLVMPassManagerBuilderPopulateFunctionPassManager(builder, func_passes);
             LLVMAddAnalysisPasses(tm, module_passes);
-            LLVMPassManagerBuilderPopulateLTOPassManager(builder, module_passes, 0, 1);
             LLVMPassManagerBuilderPopulateModulePassManager(builder, module_passes);

             // Create and run the function pass manager.
diff --git a/src/tran.rs b/src/tran.rs
index 866b9d9..83ea9ff 100644
--- a/src/tran.rs
+++ b/src/tran.rs
@@ -20,7 +20,7 @@ use std::{
 };
 extern crate flexfloat;

 /// -static NONAME: &'static i8 = unsafe { std::mem::transmute("\0".as_ptr()) };
 /// +static NONAME: &'static u8 = unsafe { std::mem::transmute("\0".as_ptr()) };

 /// Base address of the stream semantic regsiters
 static SSR_BASE: u64 = 0x204800;
