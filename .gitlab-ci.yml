variables:
  GIT_SUBMODULE_STRATEGY: recursive
  FF_USE_FASTZIP: "true"
  # These can be specified per job or per pipeline
  ARTIFACT_COMPRESSION_LEVEL: "fastest"
  CACHE_COMPRESSION_LEVEL: "fastest"
  TOOLCHAIN: "LLVM"
  CMAKE_GENERATOR: "Ninja"

stages: # List of stages for jobs, and their order of execution
  - test

.setup_test:
  script:
    - bash && source ~/.bashrc
    - $CONDA activate dumpoci
    - export PYTHONPATH=`pwd`:$PYTHONPATH
    - cd DeeployTest
    - git lfs pull

build_deeploy: # This job runs in the build stage, which runs first.
  stage: test
  resource_group: install
  artifacts:
    untracked: true
  script:
    - bash && source ~/.bashrc
    - $CONDA activate dumpoci
    - pip install -e .
    - rm -f DeeployTest/out.txt

gen_docs:
  stage: test
  resource_group: install
  artifacts:
    untracked: true
  script:
    - bash && source ~/.bashrc
    - $CONDA activate dumpoci
    - make docs

run_cmsis_test_models: # This job runs in the test stage.
  stage: test # It only starts when the job in the build stage completes successfully.
  tags:
    - qemu-arm
  parallel:
    matrix:
    - TEST: [simpleRegression, WaveFormer]
  script:
    - !reference [.setup_test, script]
    - python testRunner_cortexm.py -t ./Tests/$TEST --toolchain=$TOOLCHAIN --toolchain_install_dir=$LLVM_INSTALL_DIR
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA"
    paths:
      - ./DeeployTest/out.txt
      - ./DeeployTest/TEST_QEMU/Tests/$TEST/*.c
      - ./DeeployTest/TEST_QEMU/Tests/$TEST/*.h
    expire_in: 4 weeks
  cache:
    key: $CI_PROJECT_DIR-$CI_COMMIT_REF_SLUG
    paths:
      - ./DeeployTest/TEST_*/build

run_cmsis_test_kernels: # This job runs in the test stage.
  stage: test # It only starts when the job in the build stage completes successfully.
  tags:
    - qemu-arm
  parallel:
    matrix:
    - TEST: [Adder, MultIO, test1DPad, test2DPad, testMatMul, testMatMulAdd, testMaxPool, testRQConv, testReduceSum, testReduceMean, testSlice]
  script:
    - !reference [.setup_test, script]
    - python testRunner_cortexm.py -t ./Tests/$TEST --toolchain=$TOOLCHAIN --toolchain_install_dir=$LLVM_INSTALL_DIR
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA"
    paths:
      - ./DeeployTest/out.txt
      - ./DeeployTest/TEST_QEMU/Tests/$TEST/*.c
      - ./DeeployTest/TEST_QEMU/Tests/$TEST/*.h
    expire_in: 4 weeks
  cache:
    key: $CI_PROJECT_DIR-$CI_COMMIT_REF_SLUG
    paths:
      - ./DeeployTest/TEST_*/build

run_siracusa_test_models: # This job runs in the test stage.
  stage: test # It only starts when the job in the build stage completes successfully.
  tags:
    - PULP
  parallel:
    matrix:
    - TEST: [simpleRegression, miniMobileNet, miniMobileNetv2, Attention, MLPerf/KeywordSpotting, MLPerf/ImageClassification, MLPerf/AnomalyDetection]
  script:
    - !reference [.setup_test, script]
    - python testRunner_siracusa.py -t ./Tests/$TEST --toolchain=$TOOLCHAIN --toolchain_install_dir=$LLVM_INSTALL_DIR --cores=8
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA"
    paths:
      - ./DeeployTest/out.txt
      - ./DeeployTest/TEST_SIRACUSA/Tests/$TEST/*.c
      - ./DeeployTest/TEST_SIRACUSA/Tests/$TEST/*.h
    expire_in: 4 weeks
  cache:
    key: $CI_PROJECT_DIR-$CI_COMMIT_REF_SLUG
    paths:
      - ./DeeployTest/TEST_*/build

run_siracusa_test_kernels: # This job runs in the test stage.
  stage: test # It only starts when the job in the build stage completes successfully.
  tags:
    - PULP
  parallel:
    matrix:
    - TEST: [Adder, MultIO, test1DPad, test2DPad, testMatMul, testMatMulAdd, testRequantizedDWConv, test2DRequantizedConv, iSoftmax, testConcat, testRMSNorm, trueIntegerDivSandwich, Hardswish, RQHardswish, testBacktracking]
  script:
    - !reference [.setup_test, script]
    - python testRunner_siracusa.py -t ./Tests/$TEST --toolchain=$TOOLCHAIN --toolchain_install_dir=$LLVM_INSTALL_DIR
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA"
    paths:
      - ./DeeployTest/out.txt
      - ./DeeployTest/TEST_SIRACUSA/Tests/$TEST/*.c
      - ./DeeployTest/TEST_SIRACUSA/Tests/$TEST/*.h
    expire_in: 4 weeks
  cache:
    key: $CI_PROJECT_DIR-$CI_COMMIT_REF_SLUG
    paths:
      - ./DeeployTest/TEST_*/build

run_siracusa_DMA_slice_L2: # This job runs in the test stage.
  stage: test # It only starts when the job in the build stage completes successfully.
  tags:
    - PULP
  script:
    - !reference [.setup_test, script]
    - python testSlice_PULP.py --toolchain=$TOOLCHAIN --toolchain_install_dir=$LLVM_INSTALL_DIR
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA"
    paths:
      - ./DeeployTest/out.txt
      - ./DeeployTest/TEST_SIRACUSA/Tests/testSlice/*.c
      - ./DeeployTest/TEST_SIRACUSA/Tests/testSlice/*.h
    expire_in: 4 weeks
  cache:
    key: $CI_PROJECT_DIR-$CI_COMMIT_REF_SLUG
    paths:
      - ./DeeployTest/TEST_*/build

run_siracusa_tiled_kernels_singlebuffer_L2: # This job runs in the test stage.
  stage: test # It only starts when the job in the build stage completes successfully.
  tags:
    - PULP
  parallel:
    matrix:
    - TEST: "testMatMul"
      L1: [64000, 32000, 16000]
    - TEST: "test2DRequantizedConv"
      L1: [8000, 6000, 4000]
    - TEST: "testRequantizedDWConv"
      L1: [2561] # SCHEREMO: The implicit transpose after the conv is untiled; need at least 2560
    - TEST: "iSoftmax"
      L1: [800, 500, 300]
    - TEST: "testConcat"
      L1: [32000, 16000, 8000]
    - TEST: "testRMSNorm"
      L1: [2048, 1024, 512]
    - TEST: "Hardswish"
      L1: [750]
    - TEST: "RQHardswish"
      L1: [750]
  script:
    - !reference [.setup_test, script]
    - python testRunner_tiled_siracusa.py -t ./Tests/$TEST --l1 $L1 --toolchain=$TOOLCHAIN --toolchain_install_dir=$LLVM_INSTALL_DIR --cores=8
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA"
    paths:
      - ./DeeployTest/out.txt
      - ./DeeployTest/TEST_SIRACUSA/Tests/$TEST/*.c
      - ./DeeployTest/TEST_SIRACUSA/Tests/$TEST/*.h
    expire_in: 4 weeks
  cache:
    key: $CI_PROJECT_DIR-$CI_COMMIT_REF_SLUG
    paths:
      - ./DeeployTest/TEST_*/build

run_siracusa_tiled_kernels_doublebuffer_L2: # This job runs in the test stage.
  stage: test # It only starts when the job in the build stage completes successfully.
  tags:
    - PULP
  parallel:
    matrix:
    - TEST: "testMatMul"
      L1: [64000, 32000, 16000]
    - TEST: "test2DRequantizedConv"
      L1: [8000, 6000, 5000]
    - TEST: "testRequantizedDWConv"
      L1: [5121] # SCHEREMO: The implicit transpose after the conv is untiled; need at least 2560 * 2 for DB
    - TEST: "iSoftmax"
      L1: [1600, 1000, 600]
    - TEST: "testConcat"
      L1: [64000, 32000, 16000]
    - TEST: "testRMSNorm"
      L1: [4096, 2048, 1024]
    - TEST: "Hardswish"
      L1: [750]
    - TEST: "RQHardswish"
      L1: [750]
    - TEST: "microLlama/microLlama1"
      L1: [60000, 20000, 10000]
    - TEST: "microLlama/microLlama8"
      L1: [60000, 20000, 10000]
    - TEST: "microLlama/microLlama8_parallel"
      L1: [60000, 20000, 10000]
  script:
    - !reference [.setup_test, script]
    - python testRunner_tiled_siracusa.py -t ./Tests/$TEST --l1 $L1 --toolchain=$TOOLCHAIN --toolchain_install_dir=$LLVM_INSTALL_DIR --cores=8 --doublebuffer
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA"
    paths:
      - ./DeeployTest/out.txt
      - ./DeeployTest/TEST_SIRACUSA/Tests/$TEST/*.c
      - ./DeeployTest/TEST_SIRACUSA/Tests/$TEST/*.h
    expire_in: 4 weeks
  cache:
    key: $CI_PROJECT_DIR-$CI_COMMIT_REF_SLUG
    paths:
      - ./DeeployTest/TEST_*/build

run_siracusa_tiled_models_singlebuffer_L2: # This job runs in the test stage.
  stage: test # It only starts when the job in the build stage completes successfully.
  tags:
    - PULP
  parallel:
    matrix:
    - TEST: "simpleRegression"
      L1: [45000, 30000, 15000]
    - TEST: "miniMobileNet"
      L1: [60000, 12000, 6000, 3000]
    - TEST: "miniMobileNetv2"
      L1: [60000, 16000, 12000, 8000]
    - TEST: "Attention"
      L1: [60000, 10000, 5000]
    - TEST: "microLlama/microLlama1"
      L1: [60000, 10000, 5000]
    - TEST: "microLlama/microLlama8"
      L1: [60000, 10000, 5000]
    - TEST: "microLlama/microLlama8_parallel"
      L1: [60000, 10000, 5000]
    - TEST: "MLPerf/KeywordSpotting"
      L1: [64000]
    - TEST: "MLPerf/ImageClassification"
      L1: [64000]
    - TEST: "MLPerf/AnomalyDetection"
      L1: [64000]
  script:
    - !reference [.setup_test, script]
    - python testRunner_tiled_siracusa.py -t ./Tests/$TEST --l1 $L1 --toolchain=$TOOLCHAIN --toolchain_install_dir=$LLVM_INSTALL_DIR --cores=8
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA"
    paths:
      - ./DeeployTest/out.txt
      - ./DeeployTest/TEST_SIRACUSA/Tests/$TEST/*.c
      - ./DeeployTest/TEST_SIRACUSA/Tests/$TEST/*.h
    expire_in: 4 weeks
  cache:
    key: $CI_PROJECT_DIR-$CI_COMMIT_REF_SLUG
    paths:
      - ./DeeployTest/TEST_*/build

run_siracusa_tiled_models_singlebuffer_L3: # This job runs in the test stage.
  stage: test # It only starts when the job in the build stage completes successfully.
  tags:
    - PULP
  parallel:
    matrix:
    - TEST: "simpleRegression"
      L1: [45000, 30000, 16000] # SCHEREMO: 15000 leads to non-2d transfers in L3!
    - TEST: "miniMobileNet"
      L1: [60000, 12000, 6000] # SCHEREMO: 3000 leads to non-2d transfers in L3!
    - TEST: "miniMobileNetv2"
      L1: [60000, 16000, 12000, 8000]
    - TEST: "Attention"
      L1: [60000, 10000, 5000, 2500]
    - TEST: "Transformer"
      L1: [60000, 30000, 15000]
    - TEST: "microLlama/microLlama1"
      L1: [60000, 10000, 5000]
  script:
    - !reference [.setup_test, script]
    - python testRunner_tiled_siracusa.py -t ./Tests/$TEST --l1 $L1 --toolchain=$TOOLCHAIN --toolchain_install_dir=$LLVM_INSTALL_DIR --cores=8 --defaultMemLevel=L3
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA"
    paths:
      - ./DeeployTest/out.txt
      - ./DeeployTest/TEST_SIRACUSA/Tests/$TEST/*.c
      - ./DeeployTest/TEST_SIRACUSA/Tests/$TEST/*.h
    expire_in: 4 weeks
  cache:
    key: $CI_PROJECT_DIR-$CI_COMMIT_REF_SLUG
    paths:
      - ./DeeployTest/TEST_*/build


run_siracusa_tiled_models_doublebuffer_L3: # This job runs in the test stage.
  stage: test # It only starts when the job in the build stage completes successfully.
  tags:
    - PULP
  parallel:
    matrix:
    - TEST: "simpleRegression"
      L1: [60000, 45000, 30000]
    - TEST: "miniMobileNet"
      L1: [60000, 24000, 12000, 6000]
    - TEST: "miniMobileNetv2"
      L1: [60000, 32000, 24000, 16000]
    - TEST: "Attention"
      L1: [60000, 20000, 10000, 5000]
    - TEST: "Transformer"
      L1: [60000, 30000, 15000]
  script:
    - !reference [.setup_test, script]
    - python testRunner_tiled_siracusa.py -t ./Tests/$TEST --l1 $L1 --toolchain=$TOOLCHAIN --toolchain_install_dir=$LLVM_INSTALL_DIR --cores=8 --doublebuffer --defaultMemLevel=L3
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA"
    paths:
      - ./DeeployTest/out.txt
      - ./DeeployTest/TEST_SIRACUSA/Tests/$TEST/*.c
      - ./DeeployTest/TEST_SIRACUSA/Tests/$TEST/*.h
    expire_in: 4 weeks
  cache:
    key: $CI_PROJECT_DIR-$CI_COMMIT_REF_SLUG
    paths:
      - ./DeeployTest/TEST_*/build


run_siracusa_w_neureka_tiled_kernels_singlebuffer_L2:
  stage: test
  tags:
    - PULP
  parallel:
    matrix:
    - TEST: "testRequantizedLinear"
      L1: [16000]
    - TEST: "testPointwise"
      L1: [32000]
    - TEST: "testPointwiseConvBNReLU"
      L1: [32000]
    - TEST: "testPointwiseUnsignedWeights"
      L1: [32000]
  script:
    - !reference [.setup_test, script]
    - python testRunner_tiled_siracusa_w_neureka.py -t ./Tests/$TEST --l1 $L1 --toolchain=$TOOLCHAIN --toolchain_install_dir=$LLVM_INSTALL_DIR --defaultMemLevel=L2
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA"
    paths:
      - ./DeeployTest/out.txt
      - ./DeeployTest/TEST_SIRACUSA_W_NEUREKA/Tests/$TEST/*.c
      - ./DeeployTest/TEST_SIRACUSA_W_NEUREKA/Tests/$TEST/*.h
    expire_in: 4 weeks
  cache:
    key: $CI_PROJECT_DIR-$CI_COMMIT_REF_SLUG
    paths:
      - ./DeeployTest/TEST_*/build


run_siracusa_w_neureka_tiled_kernels_doublebuffer_L2:
  stage: test
  tags:
    - PULP
  parallel:
    matrix:
    - TEST: "testRequantizedLinear"
      L1: [16000]
    - TEST: "testPointwise"
      L1: [32000]
    - TEST: "testPointwiseConvBNReLU"
      L1: [32000]
    - TEST: "testPointwiseUnsignedWeights"
      L1: [32000]
  script:
    - !reference [.setup_test, script]
    - python testRunner_tiled_siracusa_w_neureka.py -t ./Tests/$TEST --l1 $L1 --toolchain=$TOOLCHAIN --toolchain_install_dir=$LLVM_INSTALL_DIR --defaultMemLevel=L2 --doublebuffer
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA"
    paths:
      - ./DeeployTest/out.txt
      - ./DeeployTest/TEST_SIRACUSA_W_NEUREKA/Tests/$TEST/*.c
      - ./DeeployTest/TEST_SIRACUSA_W_NEUREKA/Tests/$TEST/*.h
    expire_in: 4 weeks
  cache:
    key: $CI_PROJECT_DIR-$CI_COMMIT_REF_SLUG
    paths:
      - ./DeeployTest/TEST_*/build

run_siracusa_w_neureka_tiled_models_singlebuffer_L3:
  stage: test
  tags:
    - PULP
  parallel:
    matrix:
    - TEST: "miniMobileNet"
      L1: [2000] # LMACAN: 1000 leads to non-2d transfers in L3!
    - TEST: "Attention"
      L1: [2500]
    - TEST: "Transformer"
      L1: [15000]
    - TEST: "microLlama/microLlama1"
      L1: [10000]
  script:
    - !reference [.setup_test, script]
    - python testRunner_tiled_siracusa_w_neureka.py -t ./Tests/$TEST --l1 $L1 --toolchain=$TOOLCHAIN --toolchain_install_dir=$LLVM_INSTALL_DIR --cores=8 --defaultMemLevel=L3
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA"
    paths:
      - ./DeeployTest/out.txt
      - ./DeeployTest/TEST_SIRACUSA_W_NEUREKA/Tests/$TEST/*.c
      - ./DeeployTest/TEST_SIRACUSA_W_NEUREKA/Tests/$TEST/*.h
    expire_in: 4 weeks
  cache:
    key: $CI_PROJECT_DIR-$CI_COMMIT_REF_SLUG
    paths:
      - ./DeeployTest/TEST_*/build

run_siracusa_w_neureka_tiled_models_doublebuffer_L3:
  stage: test
  tags:
    - PULP
  parallel:
    matrix:
    - TEST: "miniMobileNet"
      L1: [2000] # LMACAN: 1000 leads to non-2d transfers in L3!
    - TEST: "Attention"
      L1: [5000]
    - TEST: "Transformer"
      L1: [30000]
  script:
    - !reference [.setup_test, script]
    - python testRunner_tiled_siracusa_w_neureka.py -t ./Tests/$TEST --l1 $L1 --toolchain=$TOOLCHAIN --toolchain_install_dir=$LLVM_INSTALL_DIR --cores=8 --defaultMemLevel=L3 --doublebuffer
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA"
    paths:
      - ./DeeployTest/out.txt
      - ./DeeployTest/TEST_SIRACUSA_W_NEUREKA/Tests/$TEST/*.c
      - ./DeeployTest/TEST_SIRACUSA_W_NEUREKA/Tests/$TEST/*.h
    expire_in: 4 weeks
  cache:
    key: $CI_PROJECT_DIR-$CI_COMMIT_REF_SLUG
    paths:
      - ./DeeployTest/TEST_*/build

run_siracusa_w_neureka_tiled_kernels_singlebuffer_L2_wmem:
  stage: test
  tags:
    - PULP
  parallel:
    matrix:
    - TEST: "testRequantizedLinear"
      L1: [16000]
    - TEST: "testPointwise"
      L1: [32000]
    - TEST: "testPointwiseConvBNReLU"
      L1: [32000]
    - TEST: "testPointwiseUnsignedWeights"
      L1: [32000]
  script:
    - bash && source ~/.bashrc
    - $CONDA activate dumpoci
    - export PYTHONPATH=`pwd`:$PYTHONPATH
    - cd DeeployTest
    - python testRunner_tiled_siracusa_w_neureka.py -t ./Tests/$TEST --l1 $L1 --toolchain=$TOOLCHAIN --toolchain_install_dir=$LLVM_INSTALL_DIR --defaultMemLevel=L2 --neureka-wmem
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA"
    paths:
      - ./DeeployTest/out.txt
      - ./DeeployTest/TEST_SIRACUSA_W_NEUREKA/Tests/$TEST/*.c
      - ./DeeployTest/TEST_SIRACUSA_W_NEUREKA/Tests/$TEST/*.h
    expire_in: 4 weeks
  cache:
    key: $CI_PROJECT_DIR-$CI_COMMIT_REF_SLUG
    paths:
      - ./DeeployTest/TEST_*/build

run_siracusa_w_neureka_tiled_models_doublebuffer_L3_wmem:
  stage: test
  tags:
    - PULP
  parallel:
    matrix:
    - TEST: "miniMobileNet"
      L1: [2000] # LMACAN: 1000 leads to non-2d transfers in L3!
    - TEST: "Attention"
      L1: [2500]
    - TEST: "Transformer"
      L1: [30000]
    - TEST: "microLlama/microLlama1"
      L1: [10000]
  script:
    - bash && source ~/.bashrc
    - $CONDA activate dumpoci
    - export PYTHONPATH=`pwd`:$PYTHONPATH
    - cd DeeployTest
    - python testRunner_tiled_siracusa_w_neureka.py -t ./Tests/$TEST --l1 $L1 --toolchain=$TOOLCHAIN --toolchain_install_dir=$LLVM_INSTALL_DIR --cores=8 --defaultMemLevel=L3 --doublebuffer --neureka-wmem
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA"
    paths:
      - ./DeeployTest/out.txt
      - ./DeeployTest/TEST_SIRACUSA_W_NEUREKA/Tests/$TEST/*.c
      - ./DeeployTest/TEST_SIRACUSA_W_NEUREKA/Tests/$TEST/*.h
    expire_in: 4 weeks
  cache:
    key: $CI_PROJECT_DIR-$CI_COMMIT_REF_SLUG
    paths:
      - ./DeeployTest/TEST_*/build

run_mempool_test_kernels: # This job runs in the test stage.
  stage: test # It only starts when the job in the build stage completes successfully.
  tags:
    - banshee
  retry: 2
  parallel:
    matrix:
    - TEST: [Adder, MultIO, test1DConvolution, test2DConvolution, test1DDWConvolution, test2DDWConvolution, test1DPad, test2DPad, testGEMM, testMatMul, testMatMulAdd, testMaxPool, testRQConv, testRQGEMM, testRQMatMul, testReduceSum, testReduceMean, testSlice, testRequantizedDWConv, test2DRequantizedConv]
  script:
    - !reference [.setup_test, script]
    - python testRunner_mempool.py -t ./Tests/$TEST --toolchain=$TOOLCHAIN --toolchain_install_dir=$LLVM_INSTALL_DIR
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA"
    paths:
      - ./DeeployTest/out.txt
      - ./DeeployTest/TEST_MEMPOOL/Tests/$TEST/*.c
      - ./DeeployTest/TEST_MEMPOOL/Tests/$TEST/*.h
    expire_in: 4 weeks
  cache:
    key: $CI_PROJECT_DIR-$CI_COMMIT_REF_SLUG
    paths:
      - ./DeeployTest/TEST_*/build

run_mempool_test_models:   # This job runs in the test stage.
  stage: test              # It only starts when the job in the build stage completes successfully.
  tags:
    - banshee
  retry: 2
  parallel:
    matrix:
    - TEST: [simpleRegression, simpleCNN, ICCT, ICCT_ITA, ICCT_8, ICCT_ITA_8, miniMobileNet, miniMobileNetv2]
  script:
    - !reference [.setup_test, script]
    - python testRunner_mempool.py -t ./Tests/$TEST --toolchain=$TOOLCHAIN --toolchain_install_dir=$LLVM_INSTALL_DIR
    # - python testRunner_mempool.py -t ./Tests/WaveFormer -DGCC_INSTALL_DIR=$MEMPOOL_GCC_INSTALL_DIR # Boken with ITA (heap is too small)
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA"
    paths:
      - ./DeeployTest/out.txt
      - ./DeeployTest/TEST_MEMPOOL/Tests/$TEST/*.c
      - ./DeeployTest/TEST_MEMPOOL/Tests/$TEST/*.h
    expire_in: 4 weeks
  cache:
    key: $CI_PROJECT_DIR-$CI_COMMIT_REF_SLUG
    paths:
      - ./DeeployTest/TEST_*/build

run_generic_test_kernels: # This job runs in the test stage.
  stage: test # It only starts when the job in the build stage completes successfully.
  parallel:
    matrix:
    - TEST: [Adder, MultIO, test1DConvolution, test2DConvolution, test1DDWConvolution, test2DDWConvolution, test1DPad, test2DPad, testGEMM, testMatMul, testMatMulAdd, testMaxPool, testRQConv, testRQMatMul, testReduceSum, testReduceMean, testSlice, testRequantizedDWConv, test2DRequantizedConv, iSoftmax]
  script:
    - !reference [.setup_test, script]
    - python testRunner_generic.py -t ./Tests/$TEST --toolchain=$TOOLCHAIN --toolchain_install_dir=$LLVM_INSTALL_DIR
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA"
    paths:
      - ./DeeployTest/out.txt
      - ./DeeployTest/TEST_GENERIC/Tests/$TEST/*.c
      - ./DeeployTest/TEST_GENERIC/Tests/$TEST/*.h
    expire_in: 4 weeks
  cache:
    key: $CI_PROJECT_DIR-$CI_COMMIT_REF_SLUG
    paths:
      - ./DeeployTest/TEST_*/build

run_generic_test_models:   # This job runs in the test stage.
  stage: test              # It only starts when the job in the build stage completes successfully.
  parallel:
    matrix:
    - TEST: [simpleRegression, WaveFormer, simpleCNN, ICCT, ICCT_ITA, ICCT_8, ICCT_ITA_8, miniMobileNet, miniMobileNetv2]
  script:
    - !reference [.setup_test, script]
    - python testRunner_generic.py -t ./Tests/$TEST --toolchain=$TOOLCHAIN --toolchain_install_dir=$LLVM_INSTALL_DIR
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA"
    paths:
      - ./DeeployTest/out.txt
      - ./DeeployTest/TEST_GENERIC/Tests/$TEST/*.c
      - ./DeeployTest/TEST_GENERIC/Tests/$TEST/*.h
    expire_in: 4 weeks
  cache:
    key: $CI_PROJECT_DIR-$CI_COMMIT_REF_SLUG
    paths:
      - ./DeeployTest/TEST_*/build

test_deeploy_state_serialization:
  stage: test
  parallel:
    matrix:
    - TEST: [simpleRegression]
      PLATFORM: ['QEMU-ARM', 'Siracusa', 'MemPool', 'Generic']
  script:
    - !reference [.setup_test, script]
    - python deeployStateEqualityTest.py -t ./Tests/$TEST -p $PLATFORM

test_memory_level_extension:
  stage: test
  parallel:
    matrix:
    - TEST: [simpleRegression]
      PLATFORM: ['QEMU-ARM', 'Siracusa', 'MemPool', 'Generic']
  script:
    - !reference [.setup_test, script]
    - python testMemoryLevelExtension.py -t ./Tests/$TEST -p $PLATFORM

test_tiler_extension:
  stage: test
  parallel:
    matrix:
    - TEST: [simpleRegression, simpleCNN, testMatMul, testMaxPool]
      PLATFORM: ['Siracusa']
  script:
    - !reference [.setup_test, script]
    - python testTilerExtension.py -t ./Tests/$TEST -p $PLATFORM

test_tiler_extension_fails:
  stage: test
  parallel:
    matrix:
    - TEST: [simpleRegression, simpleCNN, testMatMul]
      PLATFORM: ['Siracusa']
  script:
    - !reference [.setup_test, script]
    - python testTilerExtension.py -t ./Tests/$TEST -p $PLATFORM --l1 2000 --shouldFail

test_memory_allocation_extension:
  stage: test
  parallel:
    matrix:
    - TEST: [simpleRegression, simpleCNN, miniMobileNet, miniMobileNetv2, testMatMul, testMaxPool]
      PLATFORM: ['Siracusa']
  script:
    - !reference [.setup_test, script]
    - python testTilerExtension.py -t ./Tests/$TEST -p $PLATFORM

test_deeploy_typing:
  stage: test
  script:
    - !reference [.setup_test, script]
    - python testTypes.py

test_regex_matching:
  stage: test
  script:
    - !reference [.setup_test, script]
    - python testRegexMatching.py

format_python:
  stage: test
  script:
    - bash && source ~/.bashrc
    - $CONDA activate dumpoci
    - export PYTHONPATH=`pwd`:$PYTHONPATH
    - yapf -rpd -e "third_party/" -e "install/" -e "toolchain/" .

format_python_imports:
  stage: test
  script:
    - bash && source ~/.bashrc
    - $CONDA activate dumpoci
    - export PYTHONPATH=`pwd`:$PYTHONPATH
    - isort --sg "**/third_party/*"  --sg "install/*" --sg "toolchain/*" ./ -c -v
    - autoflake -c -r --remove-all-unused-imports --ignore-init-module-imports --exclude "*/third_party/**" ./

format_c:
  stage: test
  script:
    - bash && source ~/.bashrc
    - $CONDA activate dumpoci
    - export PYTHONPATH=`pwd`:$PYTHONPATH
    - python scripts/run_clang_format.py -e "*/third_party/*" -e "*/install/*" -e "*/toolchain/*" -ir --clang-format-executable=${LLVM_INSTALL_DIR}/bin/clang-format ./ scripts

lint_python_licenses:
  stage: test
  variables:
    LICENSE_STRING: "SPDX-License-Identifier: Apache-2.0"
  script:
    - bash && source ~/.bashrc
    - $CONDA activate dumpoci
    - export PYTHONPATH=`pwd`:$PYTHONPATH
    - grep -Lr "$LICENSE_STRING" --exclude-dir="toolchain" --exclude-dir="install" --exclude-dir=".git" . --exclude-dir="third_party" --exclude-dir="TEST_*" --exclude "run_clang_format.py" | grep ".*\.py$" || [[ $? == 1 ]]

lint_c_licenses:
  stage: test
  variables:
    LICENSE_STRING: "SPDX-License-Identifier: Apache-2.0"
  script:
    - bash && source ~/.bashrc
    - $CONDA activate dumpoci
    - export PYTHONPATH=`pwd`:$PYTHONPATH
    - grep -Lr "$LICENSE_STRING" --exclude-dir="toolchain" --exclude-dir="install" --exclude-dir=".git" . --exclude-dir="third_party" --exclude-dir="TEST_*" --exclude-dir="runtime" | grep ".*\.c$" || [[ $? == 1 ]]

lint_c_header_licenses:
  stage: test
  variables:
    LICENSE_STRING: "SPDX-License-Identifier: Apache-2.0"
  script:
    - bash && source ~/.bashrc
    - $CONDA activate dumpoci
    - export PYTHONPATH=`pwd`:$PYTHONPATH
    - grep -Lr "$LICENSE_STRING" --exclude-dir="toolchain" --exclude-dir="install" --exclude-dir=".git" . --exclude-dir="third_party" --exclude-dir="TEST_*" --exclude-dir="runtime" | grep ".*\.h$" || [[ $? == 1 ]]
